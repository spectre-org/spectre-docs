import{_ as l,c as a,a3 as o,o as n}from"./chunks/framework.DzIAwTRr.js";const m=JSON.parse('{"title":"Meters","description":null,"frontmatter":{"title":"Meters","description":null,"order":null},"headers":[],"relativePath":"docs/experimentals/meters.md","filePath":"docs/experimentals/meters.md"}'),t={name:"docs/experimentals/meters.md"};function e(p,s,r,c,y,u){return n(),a("div",null,s[0]||(s[0]=[o(`<h1 id="meters" tabindex="-1">Meters <a class="header-anchor" href="#meters" aria-label="Permalink to &quot;Meters&quot;">â€‹</a></h1> <p><span class="label label-warning">Awaiting Fix</span></p> <p>Meters represent the value within the known range.</p> <div class="vp-raw docs-demo columns"><div class="column col-3 col-xs-12"><meter class="meter" value="20" min="0" max="100"></meter></div> <div class="column col-3 col-xs-12"><meter class="meter" value="60" min="0" low="30" optimum="60" high="80" max="100"></meter></div> <div class="column col-3 col-xs-12"><meter class="meter" value="85" min="0" low="30" high="80" max="100"></meter></div> <div class="column col-3 col-xs-12"><meter class="meter" value="20" min="0" low="30" optimum="90" high="80" max="100"></meter></div></div> <div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">&lt;!-- Meter is green when low &lt; value &lt; high --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meter</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;meter&quot;</span><span style="color:#6F42C1;"> value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#6F42C1;"> min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#6F42C1;"> max</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">meter</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meter</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;meter&quot;</span><span style="color:#6F42C1;"> value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;60&quot;</span><span style="color:#6F42C1;"> min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#6F42C1;"> max</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#6F42C1;"> low</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;30&quot;</span><span style="color:#6F42C1;"> high</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;80&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">meter</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- Meter is yellow when value &lt; low  or high &lt; value --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meter</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;meter&quot;</span><span style="color:#6F42C1;"> value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;85&quot;</span><span style="color:#6F42C1;"> min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#6F42C1;"> max</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#6F42C1;"> low</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;30&quot;</span><span style="color:#6F42C1;"> high</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;80&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">meter</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- Meter is red when value &lt; low &lt; high &lt; optimum or optimum &lt; low &lt; high &lt; value --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">meter</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;meter&quot;</span><span style="color:#6F42C1;"> value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#6F42C1;"> optimum</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;90&quot;</span><span style="color:#6F42C1;"> min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#6F42C1;"> max</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#6F42C1;"> low</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;30&quot;</span><span style="color:#6F42C1;"> high</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;80&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">meter</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,9)]))}const q=l(t,[["render",e]]);export{m as __pageData,q as default};
