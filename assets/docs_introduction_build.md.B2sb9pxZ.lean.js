import{_ as a,c as e,K as n,o}from"./chunks/framework.Chz_bhN-.js";const y=JSON.parse('{"title":"Build","description":null,"frontmatter":{"title":"Build","description":null,"order":3},"headers":[],"relativePath":"docs/introduction/build.md","filePath":"docs/introduction/build.md"}'),l={name:"docs/introduction/build.md"};function p(t,s,r,c,i,u){return o(),e("div",null,s[0]||(s[0]=[n(`<h1 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h1> <p>This section assumes you are using a modern bundling setup.</p> <p>There are two main ways to customise the build output:</p> <ul><li><a href="#user-variables">user variables</a> – to customise the look and feel</li> <li><a href="#selective-imports">selective imports</a> – to include only the classes you need</li></ul> <h2 id="user-variables" tabindex="-1">User variables <a class="header-anchor" href="#user-variables" aria-label="Permalink to &quot;User variables&quot;">​</a></h2> <p>Create a new file, for example <code>assets/spectre.scss</code>.</p> <p>In this file, override Spectre&#39;s <a href="./variables.html">variables</a> then import Spectre&#39;s SCSS source:</p> <div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#E36209;">$primary-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#2e5bec</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">$dark-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#3e396b</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;node_modules/@spectre-org/spectre-css/src/spectre&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>If you have a lot of variables, you can move them to a partial, e.g. <code>_variables.scss</code>:</p> <div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;./variables&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;node_modules/@spectre-org/spectre-css/src/spectre&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Finally, in your project&#39;s entry point, import your modified version of Spectre:</p> <div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#032F62;"> &#39;./assets/spectre.scss&#39;</span></span></code></pre></div><h2 id="selective-imports" tabindex="-1">Selective imports <a class="header-anchor" href="#selective-imports" aria-label="Permalink to &quot;Selective imports&quot;">​</a></h2> <p>If you only want to use some of Spectre&#39;s features, you can import just the partials you need:</p> <div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;node_modules/@spectre-org/spectre-css/src/buttons&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;node_modules/@spectre-org/spectre-css/src/forms&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;node_modules/@spectre-org/spectre-css/src/...&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>The full list of partials can be found at:</p> <ul><li><a href="https://github.com/spectre-org/spectre-css/tree/main/src" target="_blank" rel="noreferrer">https://github.com/spectre-org/spectre-css/tree/main/src</a></li></ul> <h4 id="shortening-the-paths" tabindex="-1">Shortening the paths <a class="header-anchor" href="#shortening-the-paths" aria-label="Permalink to &quot;Shortening the paths&quot;">​</a></h4> <p>If you intend to import many partials, these long paths can become unwieldy.</p> <p>You might consider using a library like <a href="https://github.com/davestewart/alias-hq" target="_blank" rel="noreferrer">Alias HQ</a> which will allow you to alias Spectre&#39;s <code>src</code> folder:</p> <div class="language-json5"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// tsconfig.json</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#032F62;">  &quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#032F62;">    &quot;paths&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#032F62;">      &quot;@spectre/*&quot;</span><span style="color:#24292E;">: [ </span><span style="color:#032F62;">&quot;node_modules/@spectre-org/spectre-css/src/*&quot;</span><span style="color:#24292E;"> ],</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// assets/spectre.scss</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;@spectre/forms&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;@spectre/buttons&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;@spectre/...&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="prefixing" tabindex="-1">Prefixing <a class="header-anchor" href="#prefixing" aria-label="Permalink to &quot;Prefixing&quot;">​</a></h2> <div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p> <p>This technique seems to no longer work under Node 14+ due to circular dependency issues</p></div> <p>If you want to prefix all classes, you will need to clone the <a href="https://github.com/spectre-org/spectre-css" target="_blank" rel="noreferrer">spectre-css</a> repository and build from source.</p> <p>You can use <a href="https://www.npmjs.com/package/gulp-css-prefix" target="_blank" rel="noreferrer">gulp-css-prefix</a> plugin and add a new Gulp task to enable it.</p> <div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#032F62;"> install</span><span style="color:#032F62;"> gulp-css-prefix</span></span></code></pre></div><p>The following example adds <code>s-</code> to all classes.</p> <div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// gulpfile.js</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> cssPrefix </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;gulp-css-prefix&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> prefix</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> gulp</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./dist/*.css&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">cssPrefix</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;s-&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./dist&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">exports</span><span style="color:#24292E;">.prefix </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> prefix;</span></span></code></pre></div><p>After you compile your version of Spectre in the <code>/dist</code> folder, run <code>gulp prefix</code> in the directory of Spectre.</p>`,51)]))}const h=a(l,[["render",p]]);export{y as __pageData,h as default};
