import{_ as s,o as e,c as a,a as n}from"./chunks/framework.05eef085.js";const g=JSON.parse('{"title":"Code","description":null,"frontmatter":{"title":"Code","description":null,"order":7},"headers":[],"relativePath":"docs/elements/code.md","filePath":"docs/elements/code.md"}'),o={name:"docs/elements/code.md"},t=n(`<h1 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h1><p>Code is used for styling inline and multiline code snippets.</p><h2 id="inline-code" tabindex="-1">Inline code <a class="header-anchor" href="#inline-code" aria-label="Permalink to &quot;Inline code&quot;">​</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;...&lt;/</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>For inline code, you can use the <code>&lt;code&gt;</code> element.</p><h2 id="code-snippet" tabindex="-1">Code snippet <a class="header-anchor" href="#code-snippet" aria-label="Permalink to &quot;Code snippet&quot;">​</a></h2><p>For multiline code snippet blocks, you can use <code>&lt;pre&gt;</code> with the <code>code</code> class as a container, and add <code>&lt;code&gt;</code> inside it. The <code>data-lang</code> attribute is rendered as the language name in the top right.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">content</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#content&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">pre</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;js&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    const content = document.querySelector(&#39;#content&#39;)</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">pre</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,9),l=[t];function c(p,d,r,i,y,u){return e(),a("div",null,l)}const _=s(o,[["render",c]]);export{g as __pageData,_ as default};
