import{_ as o,o as n,c as p,a as s,b as l,d as a}from"./chunks/framework.01789657.js";const ts=JSON.parse('{"title":"Forms","description":null,"frontmatter":{"title":"Forms","description":null,"order":2},"headers":[],"relativePath":"docs/elements/forms.md","filePath":"docs/elements/forms.md"}'),t={name:"docs/elements/forms.md"},e=l("h1",{id:"forms",tabindex:"-1"},[s("Forms "),l("a",{class:"header-anchor",href:"#forms","aria-label":'Permalink to "Forms"'},"​")],-1),c=l("p",null,"Forms provide the most common control styles used in forms, including input, textarea, select, checkbox, radio and switch.",-1),r=l("h2",{id:"form-input",tabindex:"-1"},[s("Form input "),l("a",{class:"header-anchor",href:"#form-input","aria-label":'Permalink to "Form input"'},"​")],-1),i=a("",1),y=a("",2),d=a("",1),u=a("",2),m=a("",1),E=a("",2),_=a("",1),h=a("",2),g=a("",1),f=a("",2),v=a("",1),b=a("",2),F=a("",2),q=a("",1),A=l("p",null,[s("You can add the "),l("code",null,"form-inline"),s(" class to the form components to make them inline in one row.")],-1),C=a("",2),x=l("p",null,[s("If you want to have a horizontal form, add the "),l("code",null,"form-horizontal"),s(" class to the "),l("code",null,"<form>"),s(" container. And add the "),l("code",null,"col-<1-12>"),s(" and "),l("code",null,"col-xs/sm/lg/xl-<1-12>"),s(" class to the child elements for responsive form row layout.")],-1),T=a("",1),S=a("",2),k=a("",1),P=a("",1),w=l("p",null,[s("You can add the "),l("code",null,"input-sm"),s("/"),l("code",null,"input-lg"),s(" classes to the input-checkbox, input-radio and input-switch to have different sizes.")],-1),I=l("h2",{id:"form-icons",tabindex:"-1"},[s("Form icons "),l("a",{class:"header-anchor",href:"#form-icons","aria-label":'Permalink to "Form icons"'},"​")],-1),V=l("p",null,[s("Spectre Forms components has "),l("a",{href:"./icons.html"},"Spectre Icons"),s(" support.")],-1),N=l("p",null,[s("Add a wrapper with the "),l("code",null,"has-icon-left"),s("/"),l("code",null,"has-icon-right"),s(" class to "),l("code",null,"<input>"),s(" element. And add the icon with "),l("code",null,"form-icon"),s(" class next to the "),l("code",null,"<input>"),s(".")],-1),D=a("",1),R=a("",2),z=a("",1),H=a("",2),M=a("",1),$=l("h2",{id:"input-groups",tabindex:"-1"},[s("Input groups "),l("a",{class:"header-anchor",href:"#input-groups","aria-label":'Permalink to "Input groups"'},"​")],-1),G=a("",1),L=l("p",null,[s("If you want to attach text and button along with an input, add the "),l("code",null,"input-group"),s(" class to the input container. And add the "),l("code",null,"input-group-addon"),s(" class to the text element and "),l("code",null,"input-group-btn"),s(" to the button element.")],-1),Y=a("",2),Z=a("",1),B=l("p",null,[s("To use form validation styles, you can either add "),l("code",null,"is-success"),s(" or "),l("code",null,"is-error"),s(" class to the controls or add "),l("code",null,"has-success"),s(" or "),l("code",null,"has-error"),s(" class to parent elements. Use the "),l("code",null,"form-input-hint"),s(" class to provide form validation success and error messages.")],-1),U=a("",2),j=l("p",null,[s("You can use input "),l("code",null,"pattern"),s(" attribute to validate the value as well.")],-1),J=a("",2),O=l("p",null,[s("Add the "),l("code",null,"disabled"),s(" attribute to the element or "),l("code",null,"<fieldset>"),s(" for a disabled form components style.")],-1),K=a("",1),Q=a("",1);function W(X,ss,ls,as,os,ns){return n(),p("div",null,[e,s(),c,s(),r,s(),i,s(),y,s(),d,s(),u,s(),m,s(),E,s(),_,s(),h,s(),g,s(),f,s(),v,s(),b,s(),F,s(),q,s(),A,s(),C,s(),x,s(),T,s(),S,s(),k,s(),P,s(),w,s(),I,s(),V,s(),N,s(),D,s(),R,s(),z,s(),H,s(),M,s(),$,s(),G,s(),L,s(),Y,s(),Z,s(),B,s(),U,s(),j,s(),J,s(),O,s(),K,s(),Q])}const es=o(t,[["render",W]]);export{ts as __pageData,es as default};
