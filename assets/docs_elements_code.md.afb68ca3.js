import{_ as a,o,c as l,a as s,b as e,d as n}from"./chunks/framework.01789657.js";const T=JSON.parse('{"title":"Code","description":null,"frontmatter":{"title":"Code","description":null,"order":7},"headers":[],"relativePath":"docs/elements/code.md","filePath":"docs/elements/code.md"}'),t={name:"docs/elements/code.md"},c=e("h1",{id:"code",tabindex:"-1"},[s("Code "),e("a",{class:"header-anchor",href:"#code","aria-label":'Permalink to "Code"'},"​")],-1),p=e("p",null,"Code is used for styling inline and multiline code snippets.",-1),d=e("h2",{id:"inline-code",tabindex:"-1"},[s("Inline code "),e("a",{class:"header-anchor",href:"#inline-code","aria-label":'Permalink to "Inline code"'},"​")],-1),r=n('<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;...&lt;/</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>For inline code, you can use the <code>&lt;code&gt;</code> element.</p>',2),i=e("h2",{id:"code-snippet",tabindex:"-1"},[s("Code snippet "),e("a",{class:"header-anchor",href:"#code-snippet","aria-label":'Permalink to "Code snippet"'},"​")],-1),_=e("p",null,[s("For multiline code snippet blocks, you can use "),e("code",null,"<pre>"),s(" with the "),e("code",null,"code"),s(" class as a container, and add "),e("code",null,"<code>"),s(" inside it. The "),e("code",null,"data-lang"),s(" attribute is rendered as the language name in the top right.")],-1),y=n(`<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">content</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#content&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">pre</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;js&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    const content = document.querySelector(&#39;#content&#39;)</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">code</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">pre</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,2);function h(u,g,m,E,C,b){return o(),l("div",null,[c,s(),p,s(),d,s(),r,s(),i,s(),_,s(),y])}const f=a(t,[["render",h]]);export{T as __pageData,f as default};
