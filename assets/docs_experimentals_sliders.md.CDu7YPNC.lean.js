import{_ as n,c as t,j as l,a,K as e,o as p}from"./chunks/framework.Chz_bhN-.js";const E=JSON.parse('{"title":"Sliders","description":null,"frontmatter":{"title":"Sliders","description":null,"order":null},"headers":[],"relativePath":"docs/experimentals/sliders.md","filePath":"docs/experimentals/sliders.md"}'),r={name:"docs/experimentals/sliders.md"},i={class:"vp-raw docs-demo columns"},c={class:"column col-6 col-xs-12"};function d(u,s,y,m,F,q){return p(),t("div",null,[s[3]||(s[3]=l("h1",{id:"sliders",tabindex:"-1"},[a("Sliders "),l("a",{class:"header-anchor",href:"#sliders","aria-label":'Permalink to "Sliders"'},"â€‹")],-1)),s[4]||(s[4]=a()),s[5]||(s[5]=l("p",null,[l("small",{class:"label label-secondary"},"JS Optional")],-1)),s[6]||(s[6]=a()),s[7]||(s[7]=l("p",null,"The Sliders are for selecting values from ranges.",-1)),s[8]||(s[8]=a()),l("div",i,[l("div",c,[l("input",{ref:"slider",class:"slider tooltip",type:"range",min:"0",max:"100",value:"50",onInput:s[0]||(s[0]=o=>o.target.setAttribute("data-tooltip",o.target.value))},null,544)]),s[1]||(s[1]=a()),s[2]||(s[2]=l("div",{class:"column col-6 col-xs-12"},[l("input",{class:"slider",type:"range",min:"0",max:"100",value:"50",disabled:""})],-1))]),s[9]||(s[9]=e(` <p>You can add the class <code>tooltip</code> to have tooltip labels, along with a JavaScript handler to update the <code>data-tooltip</code> attribute. If no <code>data-tooltip</code> is set, the <code>value</code> will be used instead.</p> <div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">&lt;!-- slider --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">input</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;slider&quot;</span><span style="color:#6F42C1;"> type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;range&quot;</span><span style="color:#6F42C1;"> min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#6F42C1;"> max</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#6F42C1;"> value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- slider with tooltip --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">input</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;slider tooltip&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">       type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;range&quot;</span><span style="color:#6F42C1;"> min</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#6F42C1;"> max</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#6F42C1;"> value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">       oninput</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">setAttribute</span><span style="color:#032F62;">(&#39;data-tooltip&#39;, </span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">value</span><span style="color:#032F62;">)&quot;</span></span>
<span class="line"><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,4))])}const v=n(r,[["render",d]]);export{E as __pageData,v as default};
